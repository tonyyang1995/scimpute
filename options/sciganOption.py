from .BaseOption import BaseOptions

class sciGANopt(BaseOptions):
    def initialize(self):
        BaseOptions.initialize(self)
        self.parser.add_argument('--name', default='scigan', type=str)
        self.parser.add_argument('--epochs', default=200, type=int)
        self.parser.add_argument('--batch_size', default=16, type=int)
        self.parser.add_argument('--lr', default=2e-4, type=float)
        self.parser.add_argument('--b1', type=float, default=0.5, help='adam: decay of first order momentum of gradient')
        self.parser.add_argument('--b2', type=float, default=0.999, help='adam: decay of first order momentum of gradient')
        #parser.add_argument('--n_cpu', type=int, default=20, help='number of cpu threads to use during batch generation')
        self.parser.add_argument('--latent_dim', type=int, default=100, help='dimensionality of the latent space')
        self.parser.add_argument('--img_size', type=int, default=128, help='size of each image dimension')
        self.parser.add_argument('--channels', type=int, default=1, help='number of image channels')
        self.parser.add_argument('--n_critic', type=int, default= 1, help='number of training steps for discriminator per iter')
        self.parser.add_argument('--sample_interval', type=int, default=400, help='interval between image sampling')
        # self.parser.add_argument('--dpt', type=str, default='', help='load discrimnator model')
        # self.parser.add_argument('--gpt', type=str, default='', help='load generator model')
        # self.parser.add_argument('--train', help='train the network', action='store_true')
        # self.parser.add_argument('--impute', help='do imputation', action='store_true')
        self.parser.add_argument('--pos_path', type=str, default='dataset/PDAC/GSM3036911_PDAC-A-ST1-filtered.txt')
        # self.parser.add_argument('--img_path', type=str, default='histology.tif')
        # self.parser.add_argument('--load_model', type=str, default='')
        self.parser.add_argument('--load_g', type=str, default='')
        self.parser.add_argument('--load_d', type=str, default='')
        self.parser.add_argument('--sim_size', type=int, default=200, help='number of sim_imgs in each type')
        # self.parser.add_argument('--file_d', type=str, default='', help='path of data file')
        # self.parser.add_argument('--file_c', type=str, default='', help='path of cls file')
        self.parser.add_argument('--ncls', type=int, default=4, help='number of clusters')
        self.parser.add_argument('--knn_k', type=int, default=10, help='neighours used')
        self.parser.add_argument('--lr_rate', type=int, default=10, help='rate for slow learning')
        self.parser.add_argument('--threthold', type=float, default=0.01, help='the convergence threthold')
        # self.parser.add_argument('--job_name', type=str, default="", help='the user-defined job name, which will be used to name the output files.')
        self.parser.add_argument('--checkpoint_dir', type=str, default="./checkpoint", help='the directory for output.')
        self.parser.add_argument('--dataset_mode', type=str, default='scigan')

